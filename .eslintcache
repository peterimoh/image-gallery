[{"C:\\Users\\Akan\\gallery\\src\\index.js":"1","C:\\Users\\Akan\\gallery\\src\\reportWebVitals.js":"2","C:\\Users\\Akan\\gallery\\src\\components\\Header.jsx":"3","C:\\Users\\Akan\\gallery\\src\\components\\App.jsx":"4","C:\\Users\\Akan\\gallery\\src\\components\\gallery.jsx":"5"},{"size":179,"mtime":1607884713847,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":213,"mtime":1607899697276,"results":"9","hashOfConfig":"7"},{"size":204,"mtime":1607894195711,"results":"10","hashOfConfig":"7"},{"size":1068,"mtime":1607930470359,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1805ay1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Akan\\gallery\\src\\index.js",[],["23","24"],"C:\\Users\\Akan\\gallery\\src\\reportWebVitals.js",[],"C:\\Users\\Akan\\gallery\\src\\components\\Header.jsx",[],"C:\\Users\\Akan\\gallery\\src\\components\\App.jsx",[],"C:\\Users\\Akan\\gallery\\src\\components\\gallery.jsx",["25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":12,"column":13,"nodeType":"32","endLine":15,"endColumn":4},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]